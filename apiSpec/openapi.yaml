openapi: "3.0.0"
info:
  version: 1.0.0
  title: Swagger Petstore
  description: A sample API that uses a petstore as an example to demonstrate features in the OpenAPI 3.0 specification
  termsOfService: https://swagger.io/terms/
  contact:
    name: Swagger API Team
    email: apiteam@swagger.io
    url: https://swagger.io
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
servers:
  - url: https://petstore.swagger.io/api
paths:
  /photos:
    x-arg-1: "test"
    x-arg-2: "test"
    get:
      tags: 
        - photo
      summary: Retruns all photos
      description: Returns all photos
      opeationId: GetPhotos
      responses:
        '200':
          description: photo response
          content:
            application/json:
              schema:
                type: array
                items:
                 $ref: '#/components/schemas/Photo'
    post:
      tags: 
        - photo
      summary: Creates a photo
      description: Returns a photo
      opeationId: CreatePhoto
      responses:
        '200':
          description: photo response
          content:
            application/json:
              schema:
                type: array
                items:
                 $ref: '#/components/schemas/Photo'
  /companies:
    x-arg-1: "test"
    x-arg-2: "test"
    get:
      tags: 
        - company
      summary: Retruns all photos
      description: Returns all photos
      opeationId: GetCompanies
      responses:
        '200':
          description: photo response
          content:
            application/json:
              schema:
                type: array
                items:
                 $ref: '#/components/schemas/Photo'
    post:
      tags: 
        - company
      summary: Creates a photo
      description: Returns a photo
      opeationId: CreateCompany
      responses:
        '200':
          description: photo response
          content:
            application/json:
              schema:
                type: array
                items:
                 $ref: '#/components/schemas/Photo'
components:
  schemas:
    Photo:
      properties:
        uuid:
          x-go-name: UUID
          x-go-type: uuid.UUID
          x-go-type-import:
            path: github.com/google/uuid
      required:
          - uuid